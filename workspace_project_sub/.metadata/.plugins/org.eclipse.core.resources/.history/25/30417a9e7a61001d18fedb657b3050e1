package com.javateam.dummyProject.service;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.javateam.dummyProject.dao.UserDAO;
import com.javateam.dummyProject.domain.OrderProductVO;
import com.javateam.dummyProject.domain.UserVO;

import lombok.extern.slf4j.Slf4j;

/**
 * @author RJA
 */

@Service
@Slf4j
public class OrderProductService {
	
	public void testPrint() {
		System.out.println(makeOrderProductIndex());
	}
		
	//@Autowired
	//private UserDAO userDAO; 
	
	/** USER_TBL에 저장된 고객정보 50명 랜덤순서로 저장 */
	//private List<UserVO> userDummy = userDAO.selectUserTBLRandom();
	
	// 임의 날짜
	private String dummyDate = "220912";
	
	private int randomNum = 0;
	private int nowNum = 10;
	
	/**
	 * 주문상품번호 형식 : ﻿00_00_000_OP0
	 * '주문일자 6자리'_'고객번호 7자리'_'고객의 당일 주문 순서 1자리'_OR (+) '주문상품번호'  
	 * 주문상품번호는 1~5까지만 가능
	 * @return 상품옵션번호
	 */	
	private String makeOrderProductIndex() {
		
		if(randomNum < nowNum) {
			randomNum = (int)Math.floor((Math.random()*5 + 1));
			nowNum = 1;
			dummyDate = "" + (Integer.parseInt(dummyDate) + 1);
			//userDummy.remove(0);
		}
		String result = dummyDate + "_";
		
		//result += userDummy.get(0).getUserIndex() + "_1_";
		
		result += "OR" + nowNum;
		nowNum += 1;
		
		return result;
	}
	

	/**
	 * 더미데이터 -> 직렬화
	 * OrderProductVO
	 */
	public void dummyData() {
		List<OrderProductVO> orderProductList = new ArrayList<>();
		OrderProductVO orderProductVO;
		
		for(int i=0; i<50; i++) {
			orderProductVO = new OrderProductVO();
			
			orderProductVO.setProductIndex(makeOrderProductIndex());
			
			log.info(orderProductVO.toString());
			
			orderProductList.add(orderProductVO);
			
		}
		
		log.info("직렬화 시작");
		
		String fileLocation = new File("C:\\joeunmall-teamproject2\\workspace_project_sub\\joeunmall-Dummy\\src\\main\\resources\\ser").getAbsolutePath() 
								+ "\\OrderProductListDummy.ser";
		
		try (FileOutputStream     fos = new FileOutputStream(fileLocation);
			 BufferedOutputStream bos = new BufferedOutputStream(fos);) 
		{
			ObjectOutputStream out = new ObjectOutputStream(bos);
			out.writeObject(orderProductList);
			
		} catch (IOException e) {
			
			log.error("직렬화 저장 에러 : " + e);
			e.printStackTrace();
		} 
		
		log.info("직렬화 종료");
	}
	
	/**
	 * 역직렬화 후 List로 반환
	 * 
	 * @param 역직렬화 할 파일 경로
	 * @return 역직렬화 된 List(OrderProductVO)
	 * @throws FileNotFoundException
	 */
	@SuppressWarnings("unchecked")
	public List<OrderProductVO> getOrderProductListFromSerFile(String filePath) throws FileNotFoundException {
		
		File file = new File(filePath);
		List<OrderProductVO> orderProductList = null;
		
		try (FileInputStream     fis = new FileInputStream(file);
			 BufferedInputStream bis = new BufferedInputStream(fis);) {
		
			ObjectInputStream in = new ObjectInputStream(bis);
			
			orderProductList = (List<OrderProductVO>)in.readObject();
			
		} catch (IOException e) {
			log.error("역직렬화 에러 : " + e);
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			log.error("직렬화 파일 로딩 오류 : " + e);
			e.printStackTrace();
		}
		
		return orderProductList;
	} 
	
}
