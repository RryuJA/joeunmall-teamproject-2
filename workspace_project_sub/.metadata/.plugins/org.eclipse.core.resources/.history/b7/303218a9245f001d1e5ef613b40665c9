package com.javateam.dummyProject.service;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.stereotype.Service;

import com.javateam.dummyProject.domain.ProductOptionVO;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class ProductOptionService {
	
	//상품번호 임시저장
	private String productIndex = "22_01_000";
	
	//카테고리 번호
	private String category[] = {"01", "02", "03", "04", "05"};
		
	//categoryCount : 각 카테고리별 상품 수
	private int categoryCount[] = {1, 1, 1, 1, 1};
	
	//현재 카테고리
	private int categoryNum = 0;
	
	//상품옵션번호 카운트
	private int productOptionCount = 1;
	
	//랜덤숫자 저장
	private int randomNum = 0;
	
	private int getRandomNum() {
		int result = (int)(Math.random() * 5 + 1);
		System.out.println(result);
		return result;
	}
	
	/**
	 * 상품옵션번호 형식 : ﻿00_00_000_OP0
	 * '상품번호' (+) _OP (+) '상품 옵션번호 1자리'  (상품 옵션번호는 1~5까지만 가능)
	 * @return 상품옵션번호
	 */	
	private String makeProductOptionIndex() {
		
		if(productOptionCount > 5) {
			productOptionCount = 1;
		}
		
		String result = productIndex;
		result += "_OP" + productOptionCount;
		
		productOptionCount++;
		
		return result;
	}
	
	/**
	 * 상품번호 형식 : ﻿00_00_000
	 * '상품등록연도 2자리'_'상품 카테고리 번호 2자리'_'상품 등록 순서 3자리'
	 * @return 상품번호
	 */
	private String makeProductIndex() {
		// 파일이 있으면 이전 상품번호 그대로 리턴
		if(randomNum >= productOptionCount) {
			return productIndex;
		} else {
			randomNum = getRandomNum();
			
			categoryCount[categoryNum] += 1;
			categoryNum = categoryCount[categoryNum] > 50 ? ++categoryNum : categoryNum;
			
			String result = "22_";
	
			result += category[categoryNum];
			result += "_";
			result += String.format("%03d", categoryCount[categoryNum]);
			
			productIndex = result;
			productOptionCount = 1;
			
			return result;
		}
	}
	
	
	// 더미데이터 리스트
	public void dummyData() {
		List<ProductOptionVO> productOptionList = new ArrayList<>();
		ProductOptionVO productOptionVO;
		
		while(true) {
			productOptionVO = new ProductOptionVO();
			
			productOptionVO.setProductIndex(makeProductIndex());
			productOptionVO.setProductOptionIndex(makeProductOptionIndex());
			//productOptionVO.setProductOptionValue();
			
			log.info(productOptionVO.getProductOptionIndex());
			log.info(productOptionVO.getProductIndex());
			
			productOptionList.add(productOptionVO);
			
			if((categoryCount[4] == 50) && (randomNum == productOptionCount))
				break;
			
		}
		/*
		log.info("직렬화 시작");
		
		String fileLocation = new File("C:\\joeunmall-teamproject2\\workspace_project_sub\\joeunmall-Dummy\\src\\main\\resources\\ser").getAbsolutePath() 
								+ "\\ProductImageListDummy.ser";
		
		try (FileOutputStream     fos = new FileOutputStream(fileLocation);
			 BufferedOutputStream bos = new BufferedOutputStream(fos);) 
		{
			ObjectOutputStream out = new ObjectOutputStream(bos);
			out.writeObject(productImageList);
			
		} catch (IOException e) {
			
			log.error("직렬화 저장 에러 : " + e);
			e.printStackTrace();
		} 
		
		log.info("직렬화 종료");
		*/
	}
	
	@SuppressWarnings("unchecked")
	public List<ProductOptionVO> getProductOptionListFromSerFile(String filePath) throws FileNotFoundException {
		
		File file = new File(filePath);
		List<ProductOptionVO> productOptionList = null;
		
		try (FileInputStream     fis = new FileInputStream(file);
			 BufferedInputStream bis = new BufferedInputStream(fis);) {
		
			ObjectInputStream in = new ObjectInputStream(bis);
			
			productOptionList = (List<ProductOptionVO>)in.readObject();
			
		} catch (IOException e) {
			log.error("역직렬화 에러 : " + e);
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			log.error("직렬화 파일 로딩 오류 : " + e);
			e.printStackTrace();
		}
		
		return productOptionList;
	} 
	
}
