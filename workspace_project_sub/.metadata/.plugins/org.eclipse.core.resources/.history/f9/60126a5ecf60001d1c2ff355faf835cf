package com.javateam.dummyProject.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.javateam.dummyProject.domain.UserVO;

import lombok.extern.slf4j.Slf4j;

@Repository
@Slf4j
public class UserDAO {
	
	private JdbcTemplate jdbcTemplate;
	
    @Autowired
	public void setDataSource(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);
	}
	
	private final String USER_INSERT = "INSERT INTO user_tbl VALUES("
											+ "?, ?, ?, ?, ?, "		//고객번호, 아이디, 이름, 비밀번호, 가입일
											+ "?, ?, ?, ?, ?, "		//이메일, 생년월일, 성별, 일반전화, 휴대전화
											+ "?, ?, ?)";			//우편번호, 주소, 상세주소
	
	private final String USER_SELECT_RANDOM = "SELECT * FROM ( SELECT * FROM user_tbl ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM <= 1";

	/**
	 * UserTBL에 데이터 insert
	 * 
	 * @param 테이블에 넣을 UserVO 객체
	 */
	public void insertUserTBL(UserVO vo) {
		log.info("USER_TBL INSERT");
		jdbcTemplate.update(USER_INSERT, 
							vo.getUserIndex(), vo.getUserId(), vo.getUserName(), vo.getUserPw(), vo.getUserDate(),
							vo.getUserEmail(), vo.getUserBirth(), vo.getUserGender(), vo.getUserLandline(), vo.getUserMobile(),
							vo.getUserPost(), vo.getUserAddress(), vo.getUserAddressDetail());
	}
	
	/**
	 * UserTBL에 있는 데이터 중 랜덤 1개 select
	 * 
	 * @return DB에 있는 데이터 중 랜덤 1행
	 */
	@SuppressWarnings("rawtypes")
	public UserVO selectUserTBLRandom() {
		log.info("USER_TBL SELECT RANDOM DATA");
		
		@SuppressWarnings("unchecked")
		List<UserVO> vo = jdbcTemplate.query(USER_SELECT_RANDOM, new RowMapper<UserVO>() {
			@Override
			public UserVO mapRow(ResultSet rs, int rowNum) throws SQLException {
				UserVO user = new UserVO();
				
				user.setUserIndex(rs.getString(1));
				user.setUserId(rs.getString(2));
				user.setUserName(rs.getString(3));
				user.setUserPw(rs.getString(4));
				user.setUserDate(rs.getDate(5));
				user.setUserEmail(rs.getString(6));
				user.setUserBirth(rs.getDate(7));
				user.setUserGender(rs.getString(8));
				user.setUserLandline(rs.getString(9));
				user.setUserMobile(rs.getString(10));
				user.setUserPost(rs.getString(11));
				user.setUserAddress(rs.getString(12));
				user.setUserAddressDetail(rs.getString(13));
				
				return user;
			}
		});
		
		return vo.get(0);
	}
}
